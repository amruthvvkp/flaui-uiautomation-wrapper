[tool.poetry]
name = "flaui-uiautomation-wrapper"
version = "0.0.7"
description = "Tool to perform UI Automation on Windows desktop applications using an underlying FlaUI wrapper."
authors = ["Amruth VVKP <amruthvvkp@gmail.com>"]
license = "LGPL-3.0-or-later"
readme = "README.md"
keywords = [
  "testing",
  "ui",
  "ui-automation",
  "automation",
  "windows",
  "windows automation",
  "windows testing",
  "desktop automation",
]
packages = [{ include = "flaui" }]
include = [{ path = "flaui/bin/*.dll" }]
exclude = [{ path = "wrapper_generator/*" }]

[tool.poetry.dependencies]
python = ">=3.7,<3.11"
pydantic = "^1.10.2"
loguru = "^0.6.0"
pillow = "^9.3.0"
arrow = "^1.2.3"
pythonnet = "^3.0.1"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
mypy = "^0.991"
jupyter = "^1.0.0"
isort = "^5.10.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.unit_test.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"

[tool.poetry.group.unit_test]
optional = true

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests/"]

classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Topic :: Software Development :: Developers",
  "Topic :: Software Development :: Testing",
  "Intended Audience :: Developers",
]

repository = "https://github.com/amruthvvkp/flaui-uiautomation-wrapper"


[tool.isort]
profile = "black"
known_third_party = ["fastapi", "pydantic", "starlette"]
skip = [".gitignore", ".dockerignore"]
extend_skip = [".md", ".json"]
line_length = 120
skip_gitignore = true
length_sort_straight = true
combine_straight_imports = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
ensure_newline_before_comments = true
use_parentheses = true

[tool.black]
# https://github.com/psf/black
line-length = 120
target_version = ['py310']
exclude = '''
(
  /(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | htmlcov
    | venv
    | .venv
  )/
)
'''

[tool.mypy]
strict = false
plugins = ["pydantic.mypy"]

follow_imports = "skip"
warn_redundant_casts = true
swarn_unused_ignores = true
no_implicit_reexport = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = false
warn_required_dynamic_aliases = true
warn_untyped_fields = false

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203"]
max-complexity = 10
