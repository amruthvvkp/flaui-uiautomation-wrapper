from __future__ import annotations

from enum import Enum
from typing import Any
from typing import Dict
from typing import List
from typing import Type

import System
import System.Collections
import System.ComponentModel
import System.Configuration
import System.Configuration.Assemblies
import System.Data
import System.Globalization
import System.IO
import System.Reflection
import System.Runtime
import System.Runtime.CompilerServices
import System.Runtime.InteropServices
import System.Runtime.Remoting
import System.Runtime.Serialization
import System.Security
import System.Security.AccessControl
import System.Security.Cryptography
import System.Security.Cryptography.X509Certificates
import System.Security.Policy
import System.Security.Principal
import System.Threading
import System.Threading.Tasks
import System.Xml
import System.Xml.Schema
import System.Xml.Serialization
from System.ComponentModel import MarshalByValueComponent


class AutomationElementExtensions:

    def __init__(self, *args, **kwargs) -> Any: ...
    def As(self, *args, **kwargs) -> Any: ...
    def AsButton(self, _: AutomationElement) -> Button: ...
    def AsCalendar(self, _: AutomationElement) -> Calendar: ...
    def AsCheckBox(self, _: AutomationElement) -> CheckBox: ...
    def AsComboBox(self, _: AutomationElement) -> ComboBox: ...
    def AsDataGridView(self, _: AutomationElement) -> DataGridView: ...
    def AsDateTimePicker(self, _: AutomationElement) -> DateTimePicker: ...
    def AsGrid(self, _: AutomationElement) -> Grid: ...
    def AsGridCell(self, _: AutomationElement) -> GridCell: ...
    def AsGridHeader(self, _: AutomationElement) -> GridHeader: ...
    def AsGridHeaderItem(self, _: AutomationElement) -> GridHeaderItem: ...
    def AsGridRow(self, _: AutomationElement) -> GridRow: ...
    def AsHorizontalScrollBar(self, _: AutomationElement) -> HorizontalScrollBar: ...
    def AsLabel(self, _: AutomationElement) -> Label: ...
    def AsListBox(self, _: AutomationElement) -> ListBox: ...
    def AsListBoxItem(self, _: AutomationElement) -> ListBoxItem: ...
    def AsMenu(self, _: AutomationElement) -> Menu: ...
    def AsMenuItem(self, _: AutomationElement) -> MenuItem: ...
    def AsProgressBar(self, _: AutomationElement) -> ProgressBar: ...
    def AsRadioButton(self, _: AutomationElement) -> RadioButton: ...
    def AsSlider(self, _: AutomationElement) -> Slider: ...
    def AsSpinner(self, _: AutomationElement) -> Spinner: ...
    def AsTab(self, _: AutomationElement) -> Tab: ...
    def AsTabItem(self, _: AutomationElement) -> TabItem: ...
    def AsTextBox(self, _: AutomationElement) -> TextBox: ...
    def AsThumb(self, _: AutomationElement) -> Thumb: ...
    def AsTitleBar(self, _: AutomationElement) -> TitleBar: ...
    def AsToggleButton(self, _: AutomationElement) -> ToggleButton: ...
    def AsTree(self, _: AutomationElement) -> Tree: ...
    def AsTreeItem(self, _: AutomationElement) -> TreeItem: ...
    def AsType(self, _: AutomationElement, __: Type) -> AutomationElement: ...
    def AsVerticalScrollBar(self, _: AutomationElement) -> VerticalScrollBar: ...
    def AsWindow(self, _: AutomationElement) -> Window: ...
    def DrawHighlight(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def WaitUntilClickable(self, *args, **kwargs) -> Any: ...
    def WaitUntilEnabled(self, *args, **kwargs) -> Any: ...


class AutomationElement:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...


class Button:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    def Invoke(self) -> None: ...

    @property
    def InvokePattern(self): ...

    @InvokePattern.setter
    def InvokePattern(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_InvokePattern(self) -> IInvokePattern: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...


class Calendar:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddRangeToSelection(self, _: List[System.DateTime]) -> None: ...
    def AddToSelection(self, _: System.DateTime) -> None: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SelectDate(self, _: System.DateTime) -> None: ...
    def SelectRange(self, _: List[System.DateTime]) -> None: ...

    @property
    def SelectedDates(self): ...

    @SelectedDates.setter
    def SelectedDates(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectedDates(self) -> List[System.DateTime]: ...


class CheckBox:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsChecked(self): ...

    @IsChecked.setter
    def IsChecked(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsToggled(self): ...

    @IsToggled.setter
    def IsToggled(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def Toggle(self) -> None: ...

    @property
    def TogglePattern(self): ...

    @TogglePattern.setter
    def TogglePattern(self, value): ...

    @property
    def ToggleState(self): ...

    @ToggleState.setter
    def ToggleState(self, value): ...

    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsChecked(self) -> System.Nullable[bool]: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsToggled(self) -> System.Nullable[bool]: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Text(self) -> str: ...
    def get_TogglePattern(self) -> ITogglePattern: ...
    def get_ToggleState(self) -> ToggleState: ...
    def set_IsChecked(self, _: System.Nullable[bool]) -> None: ...
    def set_IsToggled(self, _: System.Nullable[bool]) -> None: ...
    def set_ToggleState(self, _: ToggleState) -> None: ...


class ComboBox:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def AnimationDuration(self): ...

    @AnimationDuration.setter
    def AnimationDuration(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...
    def Collapse(self) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...

    @property
    def EditableItem(self): ...

    @EditableItem.setter
    def EditableItem(self, value): ...

    @property
    def EditableText(self): ...

    @EditableText.setter
    def EditableText(self, value): ...

    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Expand(self) -> None: ...

    @property
    def ExpandCollapseState(self): ...

    @ExpandCollapseState.setter
    def ExpandCollapseState(self, value): ...

    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEditable(self): ...

    @IsEditable.setter
    def IsEditable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsReadOnly(self): ...

    @IsReadOnly.setter
    def IsReadOnly(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Items(self): ...

    @Items.setter
    def Items(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def Select(self, _: str) -> ComboBoxItem: ...

    @property
    def SelectedItem(self): ...

    @SelectedItem.setter
    def SelectedItem(self, value): ...

    @property
    def SelectedItems(self): ...

    @SelectedItems.setter
    def SelectedItems(self, value): ...

    @property
    def SelectionPattern(self): ...

    @SelectionPattern.setter
    def SelectionPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value): ...

    @property
    def ValuePattern(self): ...

    @ValuePattern.setter
    def ValuePattern(self, value): ...

    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_AnimationDuration(self) -> System.TimeSpan: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_EditableItem(self) -> TextBox: ...
    def get_EditableText(self) -> str: ...
    def get_ExpandCollapseState(self) -> ExpandCollapseState: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEditable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsReadOnly(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Items(self) -> List[ComboBoxItem]: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectedItem(self) -> ComboBoxItem: ...
    def get_SelectedItems(self) -> List[ComboBoxItem]: ...
    def get_SelectionPattern(self) -> ISelectionPattern: ...
    def get_Value(self) -> str: ...
    def get_ValuePattern(self) -> IValuePattern: ...
    def set_AnimationDuration(self, _: System.TimeSpan) -> None: ...
    def set_EditableText(self, _: str) -> None: ...
    def set_Value(self, _: str) -> None: ...


class ComboBoxItem:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddToSelection(self) -> SelectionItemAutomationElement: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsSelected(self): ...

    @IsSelected.setter
    def IsSelected(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RemoveFromSelection(self) -> SelectionItemAutomationElement: ...
    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def Select(self) -> SelectionItemAutomationElement: ...

    @property
    def SelectionItemPattern(self): ...

    @SelectionItemPattern.setter
    def SelectionItemPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsSelected(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectionItemPattern(self) -> ISelectionItemPattern: ...
    def get_Text(self) -> str: ...
    def set_IsSelected(self, _: bool) -> None: ...


class DataGridView:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HasAddRow(self): ...

    @HasAddRow.setter
    def HasAddRow(self, value): ...

    @property
    def Header(self): ...

    @Header.setter
    def Header(self, value): ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...

    @property
    def Rows(self): ...

    @Rows.setter
    def Rows(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HasAddRow(self) -> bool: ...
    def get_Header(self) -> DataGridViewHeader: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Rows(self) -> List[DataGridViewRow]: ...
    def set_HasAddRow(self, _: bool) -> None: ...


class DataGridViewHeader:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def Columns(self): ...

    @Columns.setter
    def Columns(self, value): ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_Columns(self) -> List[DataGridViewHeaderItem]: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...


class DataGridViewHeaderItem:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Text(self) -> str: ...


class DataGridViewRow:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def Cells(self): ...

    @Cells.setter
    def Cells(self, value): ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_Cells(self) -> List[DataGridViewCell]: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...


class DataGridViewCell:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value): ...

    @property
    def ValuePattern(self): ...

    @ValuePattern.setter
    def ValuePattern(self, value): ...

    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Value(self) -> str: ...
    def get_ValuePattern(self) -> IValuePattern: ...
    def set_Value(self, _: str) -> None: ...


class DateTimePicker:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...

    @property
    def SelectedDate(self): ...

    @SelectedDate.setter
    def SelectedDate(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectedDate(self) -> System.Nullable[System.DateTime]: ...
    def set_SelectedDate(self, _: System.Nullable[System.DateTime]) -> None: ...


class Grid:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddToSelection(self, _: int, __: str) -> GridRow: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ColumnCount(self): ...

    @ColumnCount.setter
    def ColumnCount(self, value): ...

    @property
    def ColumnHeaders(self): ...

    @ColumnHeaders.setter
    def ColumnHeaders(self, value): ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetRowByIndex(self, _: int) -> GridRow: ...
    def GetRowByValue(self, _: int, __: str) -> GridRow: ...

    def GetRowsByValue(
            self,
            _: int,
            __: str,
            ___: int,
            ) -> List[GridRow]: ...

    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def GridPattern(self): ...

    @GridPattern.setter
    def GridPattern(self, value): ...

    @property
    def Header(self): ...

    @Header.setter
    def Header(self, value): ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RemoveFromSelection(self, _: int, __: str) -> GridRow: ...
    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...

    @property
    def RowCount(self): ...

    @RowCount.setter
    def RowCount(self, value): ...

    @property
    def RowHeaders(self): ...

    @RowHeaders.setter
    def RowHeaders(self, value): ...

    @property
    def RowOrColumnMajor(self): ...

    @RowOrColumnMajor.setter
    def RowOrColumnMajor(self, value): ...

    @property
    def Rows(self): ...

    @Rows.setter
    def Rows(self, value): ...

    def Select(self, _: int, __: str) -> GridRow: ...

    @property
    def SelectedItem(self): ...

    @SelectedItem.setter
    def SelectedItem(self, value): ...

    @property
    def SelectedItems(self): ...

    @SelectedItems.setter
    def SelectedItems(self, value): ...

    @property
    def SelectionPattern(self): ...

    @SelectionPattern.setter
    def SelectionPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def TablePattern(self): ...

    @TablePattern.setter
    def TablePattern(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ColumnCount(self) -> int: ...
    def get_ColumnHeaders(self) -> List[AutomationElement]: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_GridPattern(self) -> IGridPattern: ...
    def get_Header(self) -> GridHeader: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_RowCount(self) -> int: ...
    def get_RowHeaders(self) -> List[AutomationElement]: ...
    def get_RowOrColumnMajor(self) -> RowOrColumnMajor: ...
    def get_Rows(self) -> List[GridRow]: ...
    def get_SelectedItem(self) -> GridRow: ...
    def get_SelectedItems(self) -> List[GridRow]: ...
    def get_SelectionPattern(self) -> ISelectionPattern: ...
    def get_TablePattern(self) -> ITablePattern: ...


class GridHeader:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def Columns(self): ...

    @Columns.setter
    def Columns(self, value): ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_Columns(self) -> List[GridHeaderItem]: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...


class GridHeaderItem:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Text(self) -> str: ...


class GridRow:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddToSelection(self) -> SelectionItemAutomationElement: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def Cells(self): ...

    @Cells.setter
    def Cells(self, value): ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindCellByText(self, _: str) -> GridCell: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def Header(self): ...

    @Header.setter
    def Header(self, value): ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsSelected(self): ...

    @IsSelected.setter
    def IsSelected(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RemoveFromSelection(self) -> SelectionItemAutomationElement: ...
    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def ScrollIntoView(self) -> GridRow: ...

    @property
    def ScrollItemPattern(self): ...

    @ScrollItemPattern.setter
    def ScrollItemPattern(self, value): ...

    def Select(self) -> SelectionItemAutomationElement: ...

    @property
    def SelectionItemPattern(self): ...

    @SelectionItemPattern.setter
    def SelectionItemPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_Cells(self) -> List[GridCell]: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_Header(self) -> GridHeaderItem: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsSelected(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_ScrollItemPattern(self) -> IScrollItemPattern: ...
    def get_SelectionItemPattern(self) -> ISelectionItemPattern: ...
    def set_IsSelected(self, _: bool) -> None: ...


class GridCell:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ContainingGrid(self): ...

    @ContainingGrid.setter
    def ContainingGrid(self, value): ...

    @property
    def ContainingRow(self): ...

    @ContainingRow.setter
    def ContainingRow(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def GridItemPattern(self): ...

    @GridItemPattern.setter
    def GridItemPattern(self, value): ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def TableItemPattern(self): ...

    @TableItemPattern.setter
    def TableItemPattern(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value): ...

    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ContainingGrid(self) -> Grid: ...
    def get_ContainingRow(self) -> GridRow: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_GridItemPattern(self) -> IGridItemPattern: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_TableItemPattern(self) -> ITableItemPattern: ...
    def get_Value(self) -> str: ...


class Label:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Text(self) -> str: ...


class ListBox:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddToSelection(self, _: str) -> ListBoxItem: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Items(self): ...

    @Items.setter
    def Items(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RemoveFromSelection(self, _: str) -> ListBoxItem: ...
    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def Select(self, _: str) -> ListBoxItem: ...

    @property
    def SelectedItem(self): ...

    @SelectedItem.setter
    def SelectedItem(self, value): ...

    @property
    def SelectedItems(self): ...

    @SelectedItems.setter
    def SelectedItems(self, value): ...

    @property
    def SelectionPattern(self): ...

    @SelectionPattern.setter
    def SelectionPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Items(self) -> List[ListBoxItem]: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectedItem(self) -> ListBoxItem: ...
    def get_SelectedItems(self) -> List[ListBoxItem]: ...
    def get_SelectionPattern(self) -> ISelectionPattern: ...


class ListBoxItem:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddToSelection(self) -> SelectionItemAutomationElement: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsChecked(self): ...

    @IsChecked.setter
    def IsChecked(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsSelected(self): ...

    @IsSelected.setter
    def IsSelected(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RemoveFromSelection(self) -> SelectionItemAutomationElement: ...
    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def ScrollIntoView(self) -> ListBoxItem: ...

    @property
    def ScrollItemPattern(self): ...

    @ScrollItemPattern.setter
    def ScrollItemPattern(self, value): ...

    def Select(self) -> SelectionItemAutomationElement: ...

    @property
    def SelectionItemPattern(self): ...

    @SelectionItemPattern.setter
    def SelectionItemPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsChecked(self) -> System.Nullable[bool]: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsSelected(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_ScrollItemPattern(self) -> IScrollItemPattern: ...
    def get_SelectionItemPattern(self) -> ISelectionItemPattern: ...
    def get_Text(self) -> str: ...
    def set_IsChecked(self, _: System.Nullable[bool]) -> None: ...
    def set_IsSelected(self, _: bool) -> None: ...


class Menu:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsWin32Menu(self): ...

    @IsWin32Menu.setter
    def IsWin32Menu(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Items(self): ...

    @Items.setter
    def Items(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsWin32Menu(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Items(self) -> MenuItems: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def set_IsWin32Menu(self, _: bool) -> None: ...


class MenuItem:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...
    def Collapse(self) -> MenuItem: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Expand(self) -> MenuItem: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    def Invoke(self) -> MenuItem: ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsChecked(self): ...

    @IsChecked.setter
    def IsChecked(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Items(self): ...

    @Items.setter
    def Items(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsChecked(self) -> System.Nullable[bool]: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Items(self) -> MenuItems: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Text(self) -> str: ...
    def set_IsChecked(self, _: System.Nullable[bool]) -> None: ...


class MenuItems:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Add(self, _: MenuItem) -> None: ...
    def AddRange(self, _: List[MenuItem]) -> None: ...
    def AsReadOnly(self) -> System.Collections.ObjectModel.ReadOnlyCollection[MenuItem]: ...
    def BinarySearch(self, _: int, __: int, ___: MenuItem, ____: Any) -> int: ...

    @property
    def Capacity(self): ...

    @Capacity.setter
    def Capacity(self, value): ...

    def Clear(self) -> None: ...
    def Contains(self, _: MenuItem) -> bool: ...
    def ConvertAll(self, *args, **kwargs) -> Any: ...

    def CopyTo(
            self,
            _: int,
            __: List[MenuItem],
            ___: int,
            ____: int,
            ) -> None: ...

    @property
    def Count(self): ...

    @Count.setter
    def Count(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Exists(self, _: System.Predicate[MenuItem]) -> bool: ...
    def Finalize(self) -> None: ...
    def Find(self, _: System.Predicate[MenuItem]) -> MenuItem: ...
    def FindAll(self, _: System.Predicate[MenuItem]) -> List[MenuItem]: ...
    def FindIndex(self, _: int, __: int, ___: System.Predicate[MenuItem]) -> int: ...
    def FindLast(self, _: System.Predicate[MenuItem]) -> MenuItem: ...
    def FindLastIndex(self, _: int, __: int, ___: System.Predicate[MenuItem]) -> int: ...
    def ForEach(self, _: System.Action[MenuItem]) -> None: ...
    def GetEnumerator(self) -> Any: ...
    def GetHashCode(self) -> int: ...
    def GetRange(self, _: int, __: int) -> List[MenuItem]: ...
    def GetType(self) -> Type: ...
    def IndexOf(self, _: MenuItem, __: int, ___: int) -> int: ...
    def Insert(self, _: int, __: MenuItem) -> None: ...
    def InsertRange(self, _: int, __: List[MenuItem]) -> None: ...
    def LastIndexOf(self, _: MenuItem, __: int, ___: int) -> int: ...

    @property
    def Length(self): ...

    @Length.setter
    def Length(self, value): ...

    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def Remove(self, _: MenuItem) -> bool: ...
    def RemoveAll(self, _: System.Predicate[MenuItem]) -> int: ...
    def RemoveAt(self, _: int) -> None: ...
    def RemoveRange(self, _: int, __: int) -> None: ...
    def Reverse(self, _: int, __: int) -> None: ...
    def Sort(self, _: int, __: int, ___: Any) -> None: ...
    def ToArray(self) -> List[MenuItem]: ...
    def ToString(self) -> str: ...
    def TrimExcess(self) -> None: ...
    def TrueForAll(self, _: System.Predicate[MenuItem]) -> bool: ...
    def get_Capacity(self) -> int: ...
    def get_Count(self) -> int: ...
    def get_Item(self, _: int) -> MenuItem: ...
    def get_Length(self) -> int: ...
    def set_Capacity(self, _: int) -> None: ...
    def set_Item(self, _: int, __: MenuItem) -> None: ...


class ProgressBar:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Maximum(self): ...

    @Maximum.setter
    def Maximum(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Minimum(self): ...

    @Minimum.setter
    def Minimum(self, value): ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    @property
    def RangeValuePattern(self): ...

    @RangeValuePattern.setter
    def RangeValuePattern(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value): ...

    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Maximum(self) -> float: ...
    def get_Minimum(self) -> float: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_RangeValuePattern(self) -> IRangeValuePattern: ...
    def get_Value(self) -> float: ...


class RadioButton:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsChecked(self): ...

    @IsChecked.setter
    def IsChecked(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...

    @property
    def SelectionItemPattern(self): ...

    @SelectionItemPattern.setter
    def SelectionItemPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsChecked(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectionItemPattern(self) -> ISelectionItemPattern: ...
    def set_IsChecked(self, _: bool) -> None: ...


class Slider:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    @property
    def IsOnlyValue(self): ...

    @IsOnlyValue.setter
    def IsOnlyValue(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def LargeChange(self): ...

    @LargeChange.setter
    def LargeChange(self, value): ...

    @property
    def LargeDecreaseButton(self): ...

    @LargeDecreaseButton.setter
    def LargeDecreaseButton(self, value): ...

    def LargeDecrement(self) -> None: ...

    @property
    def LargeIncreaseButton(self): ...

    @LargeIncreaseButton.setter
    def LargeIncreaseButton(self, value): ...

    def LargeIncrement(self) -> None: ...

    @property
    def Maximum(self): ...

    @Maximum.setter
    def Maximum(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Minimum(self): ...

    @Minimum.setter
    def Minimum(self, value): ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def SmallChange(self): ...

    @SmallChange.setter
    def SmallChange(self, value): ...

    def SmallDecrement(self) -> None: ...
    def SmallIncrement(self) -> None: ...

    @property
    def Thumb(self): ...

    @Thumb.setter
    def Thumb(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value): ...

    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsOnlyValue(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_LargeChange(self) -> float: ...
    def get_LargeDecreaseButton(self) -> Button: ...
    def get_LargeIncreaseButton(self) -> Button: ...
    def get_Maximum(self) -> float: ...
    def get_Minimum(self) -> float: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SmallChange(self) -> float: ...
    def get_Thumb(self) -> Thumb: ...
    def get_Value(self) -> float: ...
    def set_Value(self, _: float) -> None: ...


class Spinner:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    @property
    def DecreaseButton(self): ...

    @DecreaseButton.setter
    def DecreaseButton(self, value): ...

    def Decrement(self) -> None: ...
    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetDecreaseButton(self) -> Button: ...
    def GetHashCode(self) -> int: ...
    def GetIncreaseButton(self) -> Button: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IncreaseButton(self): ...

    @IncreaseButton.setter
    def IncreaseButton(self, value): ...

    def Increment(self) -> None: ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    @property
    def IsOnlyValue(self): ...

    @IsOnlyValue.setter
    def IsOnlyValue(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Maximum(self): ...

    @Maximum.setter
    def Maximum(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Minimum(self): ...

    @Minimum.setter
    def Minimum(self, value): ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def SmallChange(self): ...

    @SmallChange.setter
    def SmallChange(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value): ...

    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_DecreaseButton(self) -> Button: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IncreaseButton(self) -> Button: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsOnlyValue(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Maximum(self) -> float: ...
    def get_Minimum(self) -> float: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SmallChange(self) -> float: ...
    def get_Value(self) -> float: ...
    def set_Value(self, _: float) -> None: ...


class Tab:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SelectTabItem(self, _: str) -> TabItem: ...

    @property
    def SelectedTabItem(self): ...

    @SelectedTabItem.setter
    def SelectedTabItem(self, value): ...

    @property
    def SelectedTabItemIndex(self): ...

    @SelectedTabItemIndex.setter
    def SelectedTabItemIndex(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def TabItems(self): ...

    @TabItems.setter
    def TabItems(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectedTabItem(self) -> TabItem: ...
    def get_SelectedTabItemIndex(self) -> int: ...
    def get_TabItems(self) -> List[TabItem]: ...


class TabItem:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddToSelection(self) -> SelectionItemAutomationElement: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsSelected(self): ...

    @IsSelected.setter
    def IsSelected(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RemoveFromSelection(self) -> SelectionItemAutomationElement: ...
    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def Select(self) -> SelectionItemAutomationElement: ...

    @property
    def SelectionItemPattern(self): ...

    @SelectionItemPattern.setter
    def SelectionItemPattern(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsSelected(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectionItemPattern(self) -> ISelectionItemPattern: ...
    def set_IsSelected(self, _: bool) -> None: ...


class TextBox:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Enter(self, _: str) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsReadOnly(self): ...

    @IsReadOnly.setter
    def IsReadOnly(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsReadOnly(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Text(self) -> str: ...
    def set_Text(self, _: str) -> None: ...


class Thumb:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def SlideHorizontally(self, _: int) -> None: ...
    def SlideVertically(self, _: int) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...


class TitleBar:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def CloseButton(self): ...

    @CloseButton.setter
    def CloseButton(self, value): ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def MaximizeButton(self): ...

    @MaximizeButton.setter
    def MaximizeButton(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def MinimizeButton(self): ...

    @MinimizeButton.setter
    def MinimizeButton(self, value): ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    @property
    def RestoreButton(self): ...

    @RestoreButton.setter
    def RestoreButton(self, value): ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_CloseButton(self) -> Button: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_MaximizeButton(self) -> Button: ...
    def get_MinimizeButton(self) -> Button: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_RestoreButton(self) -> Button: ...


class ToggleButton:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsToggled(self): ...

    @IsToggled.setter
    def IsToggled(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def Toggle(self) -> None: ...

    @property
    def TogglePattern(self): ...

    @TogglePattern.setter
    def TogglePattern(self, value): ...

    @property
    def ToggleState(self): ...

    @ToggleState.setter
    def ToggleState(self, value): ...

    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsToggled(self) -> System.Nullable[bool]: ...
    def get_ItemStatus(self) -> str: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_TogglePattern(self) -> ITogglePattern: ...
    def get_ToggleState(self) -> ToggleState: ...
    def set_IsToggled(self, _: System.Nullable[bool]) -> None: ...
    def set_ToggleState(self, _: ToggleState) -> None: ...


class Tree:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Items(self): ...

    @Items.setter
    def Items(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...

    @property
    def SelectedTreeItem(self): ...

    @SelectedTreeItem.setter
    def SelectedTreeItem(self, value): ...

    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Items(self) -> List[TreeItem]: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_SelectedTreeItem(self) -> TreeItem: ...


class TreeItem:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    def AddToSelection(self) -> TreeItem: ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...
    def Collapse(self) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Expand(self) -> None: ...

    @property
    def ExpandCollapseState(self): ...

    @ExpandCollapseState.setter
    def ExpandCollapseState(self, value): ...

    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsChecked(self): ...

    @IsChecked.setter
    def IsChecked(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def IsSelected(self): ...

    @IsSelected.setter
    def IsSelected(self, value): ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    @property
    def Items(self): ...

    @Items.setter
    def Items(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RemoveFromSelection(self) -> TreeItem: ...
    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def Select(self) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...

    @property
    def Text(self): ...

    @Text.setter
    def Text(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ControlType(self) -> ControlType: ...
    def get_ExpandCollapseState(self) -> ExpandCollapseState: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsChecked(self) -> System.Nullable[bool]: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_IsSelected(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_Items(self) -> List[TreeItem]: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Properties(self) -> Any: ...
    def get_Text(self) -> str: ...
    def set_IsChecked(self, _: System.Nullable[bool]) -> None: ...
    def set_IsSelected(self, _: bool) -> None: ...


class Window:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def ActualHeight(self): ...

    @ActualHeight.setter
    def ActualHeight(self, value): ...

    @property
    def ActualWidth(self): ...

    @ActualWidth.setter
    def ActualWidth(self, value): ...

    @property
    def Automation(self): ...

    @Automation.setter
    def Automation(self, value): ...

    @property
    def AutomationId(self): ...

    @AutomationId.setter
    def AutomationId(self, value): ...

    @property
    def AutomationType(self): ...

    @AutomationType.setter
    def AutomationType(self, value): ...

    @property
    def BoundingRectangle(self): ...

    @BoundingRectangle.setter
    def BoundingRectangle(self, value): ...

    @property
    def CachedChildren(self): ...

    @CachedChildren.setter
    def CachedChildren(self, value): ...

    @property
    def CachedParent(self): ...

    @CachedParent.setter
    def CachedParent(self, value): ...

    def Capture(self) -> System.Drawing.Bitmap: ...
    def CaptureToFile(self, _: str) -> None: ...

    @property
    def ClassName(self): ...

    @ClassName.setter
    def ClassName(self, value): ...

    def Click(self, _: bool) -> None: ...
    def Close(self) -> None: ...

    @property
    def ConditionFactory(self): ...

    @ConditionFactory.setter
    def ConditionFactory(self, value): ...

    @property
    def ContextMenu(self): ...

    @ContextMenu.setter
    def ContextMenu(self, value): ...

    @property
    def ControlType(self): ...

    @ControlType.setter
    def ControlType(self, value): ...

    def DoubleClick(self, _: bool) -> None: ...
    def Equals(self, _: object) -> bool: ...
    def ExecuteInPattern(self, *args, **kwargs) -> Any: ...
    def Finalize(self) -> None: ...

    def FindAll(
            self,
            _: TreeScope,
            __: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllByXPath(
            self,
            _: str,
            ) -> List[AutomationElement]: ...

    def FindAllChildren(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllDescendants(
            self,
            _: ConditionBase,
            ) -> List[AutomationElement]: ...

    def FindAllNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> List[AutomationElement]: ...

    def FindAllWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> List[AutomationElement]: ...

    def FindAt(self, _: TreeScope, __: int, ___: ConditionBase) -> AutomationElement: ...
    def FindChildAt(self, _: int, __: ConditionBase) -> AutomationElement: ...
    def FindFirst(self, _: TreeScope, __: ConditionBase) -> AutomationElement: ...
    def FindFirstByXPath(self, _: str) -> AutomationElement: ...
    def FindFirstChild(self, _: str) -> AutomationElement: ...
    def FindFirstDescendant(self, _: str) -> AutomationElement: ...

    def FindFirstNested(
            self,
            _: List[FlaUI.Core.Conditions.ConditionBase],
            ) -> AutomationElement: ...

    def FindFirstWithOptions(
            self,
            _: TreeScope,
            __: ConditionBase,
            ___: TreeTraversalOptions,
            ____: AutomationElement,
            ) -> AutomationElement: ...

    def Focus(self) -> None: ...
    def FocusNative(self) -> None: ...

    @property
    def FrameworkAutomationElement(self): ...

    @FrameworkAutomationElement.setter
    def FrameworkAutomationElement(self, value): ...

    @property
    def FrameworkType(self): ...

    @FrameworkType.setter
    def FrameworkType(self, value): ...

    def GetClickablePoint(self) -> System.Drawing.Point: ...
    def GetContextMenuByFrameworkType(self, _: FrameworkType) -> Menu: ...
    def GetCurrentMetadataValue(self, _: PropertyId, __: int) -> object: ...
    def GetHashCode(self) -> int: ...
    def GetSupportedPatterns(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPatternsDirect(self) -> List[FlaUI.Core.Identifiers.PatternId]: ...
    def GetSupportedPropertiesDirect(self) -> List[FlaUI.Core.Identifiers.PropertyId]: ...
    def GetType(self) -> Type: ...

    @property
    def HelpText(self): ...

    @HelpText.setter
    def HelpText(self, value): ...

    @property
    def IsAvailable(self): ...

    @IsAvailable.setter
    def IsAvailable(self, value): ...

    @property
    def IsEnabled(self): ...

    @IsEnabled.setter
    def IsEnabled(self, value): ...

    @property
    def IsModal(self): ...

    @IsModal.setter
    def IsModal(self, value): ...

    @property
    def IsOffscreen(self): ...

    @IsOffscreen.setter
    def IsOffscreen(self, value): ...

    def IsPatternSupported(self, _: PatternId) -> bool: ...
    def IsPatternSupportedDirect(self, _: PatternId) -> bool: ...
    def IsPropertySupportedDirect(self, _: PropertyId) -> bool: ...

    @property
    def ItemStatus(self): ...

    @ItemStatus.setter
    def ItemStatus(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def ModalWindows(self): ...

    @ModalWindows.setter
    def ModalWindows(self, value): ...

    def Move(self, _: int, __: int) -> None: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Parent(self): ...

    @Parent.setter
    def Parent(self, value): ...

    @property
    def Patterns(self): ...

    @Patterns.setter
    def Patterns(self, value): ...

    @property
    def Popup(self): ...

    @Popup.setter
    def Popup(self, value): ...

    @property
    def Properties(self): ...

    @Properties.setter
    def Properties(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def RegisterActiveTextPositionChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, ITextRange],
            ) -> ActiveTextPositionChangedEventHandlerBase: ...

    def RegisterAutomationEvent(
            self,
            _: EventId,
            __: TreeScope,
            ___: System.Action[AutomationElement, EventId],
            ) -> AutomationEventHandlerBase: ...

    def RegisterNotificationEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, NotificationKind, NotificationProcessing, str, str],
            ) -> NotificationEventHandlerBase: ...

    def RegisterPropertyChangedEvent(
            self,
            _: TreeScope,
            __: System.Action[AutomationElement, PropertyId, object],
            ___: List[FlaUI.Core.Identifiers.PropertyId],
            ) -> PropertyChangedEventHandlerBase: ...

    def RegisterStructureChangedEvent(
            self,
            _: TreeScope,
            __: System.Action`3[AutomationElement,FlaUI.Core.Definitions.StructureChangeType,System.Int32[]],
            ) -> StructureChangedEventHandlerBase: ...

    def RegisterTextEditTextChangedEventHandler(
            self,
            _: TreeScope,
            __: TextEditChangeType,
            ___: System.Action`3[AutomationElement,FlaUI.Core.Definitions.TextEditChangeType,System.String[]],
            ) -> TextEditTextChangedEventHandlerBase: ...

    def RightClick(self, _: bool) -> None: ...
    def RightDoubleClick(self, _: bool) -> None: ...
    def SetFocus(self) -> None: ...
    def SetForeground(self) -> None: ...
    def SetTransparency(self, _: bytes) -> None: ...

    @property
    def Title(self): ...

    @Title.setter
    def Title(self, value): ...

    @property
    def TitleBar(self): ...

    @TitleBar.setter
    def TitleBar(self, value): ...

    def ToString(self) -> str: ...
    def TryGetClickablePoint(self, _: System.Drawing.Point) -> bool: ...
    def get_ActualHeight(self) -> float: ...
    def get_ActualWidth(self) -> float: ...
    def get_Automation(self) -> AutomationBase: ...
    def get_AutomationId(self) -> str: ...
    def get_AutomationType(self) -> AutomationType: ...
    def get_BoundingRectangle(self) -> System.Drawing.Rectangle: ...
    def get_CachedChildren(self) -> List[AutomationElement]: ...
    def get_CachedParent(self) -> AutomationElement: ...
    def get_ClassName(self) -> str: ...
    def get_ConditionFactory(self) -> ConditionFactory: ...
    def get_ContextMenu(self) -> Menu: ...
    def get_ControlType(self) -> ControlType: ...
    def get_FrameworkAutomationElement(self) -> FrameworkAutomationElementBase: ...
    def get_FrameworkType(self) -> FrameworkType: ...
    def get_HelpText(self) -> str: ...
    def get_IsAvailable(self) -> bool: ...
    def get_IsEnabled(self) -> bool: ...
    def get_IsModal(self) -> bool: ...
    def get_IsOffscreen(self) -> bool: ...
    def get_ItemStatus(self) -> str: ...
    def get_ModalWindows(self) -> List[Window]: ...
    def get_Name(self) -> str: ...
    def get_Parent(self) -> AutomationElement: ...
    def get_Patterns(self) -> Any: ...
    def get_Popup(self) -> Window: ...
    def get_Properties(self) -> Any: ...
    def get_Title(self) -> str: ...
    def get_TitleBar(self) -> TitleBar: ...
