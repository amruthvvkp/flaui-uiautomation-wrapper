from __future__ import annotations

from typing import Any
from typing import Type

import System
import System.Collections
import System.ComponentModel
import System.Configuration
import System.Configuration.Assemblies
import System.Data
import System.Globalization
import System.IO
import System.Reflection
import System.Runtime
import System.Runtime.CompilerServices
import System.Runtime.InteropServices
import System.Runtime.Remoting
import System.Runtime.Serialization
import System.Security
import System.Security.AccessControl
import System.Security.Cryptography
import System.Security.Cryptography.X509Certificates
import System.Security.Policy
import System.Security.Principal
import System.Threading
import System.Threading.Tasks
import System.Xml
import System.Xml.Schema
import System.Xml.Serialization
from System.ComponentModel import MarshalByValueComponent


class ConvertibleIdentifierBase:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Convert(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object) -> bool: ...
    def Finalize(self) -> None: ...
    def FindEvent(self, _: AutomationType, __: int) -> EventId: ...
    def FindPattern(self, _: AutomationType, __: int) -> PatternId: ...
    def FindProperty(self, _: AutomationType, __: int) -> PropertyId: ...
    def FindTextAttribute(self, _: AutomationType, __: int) -> TextAttributeId: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def Id(self): ...

    @Id.setter
    def Id(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def RegisterEvent(self, _: AutomationType, __: int, ___: str) -> EventId: ...

    def RegisterPattern(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ____: PropertyId,
            ) -> PatternId: ...

    def RegisterProperty(self, _: AutomationType, __: int, ___: str) -> PropertyId: ...

    def RegisterTextAttribute(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ) -> TextAttributeId: ...

    def SetConverter(self, *args, **kwargs) -> Any: ...
    def ToString(self) -> str: ...
    def get_Id(self) -> int: ...
    def get_Name(self) -> str: ...


class EventId:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object) -> bool: ...
    def Finalize(self) -> None: ...
    def Find(self, _: AutomationType, __: int) -> EventId: ...
    def FindEvent(self, _: AutomationType, __: int) -> EventId: ...
    def FindPattern(self, _: AutomationType, __: int) -> PatternId: ...
    def FindProperty(self, _: AutomationType, __: int) -> PropertyId: ...
    def FindTextAttribute(self, _: AutomationType, __: int) -> TextAttributeId: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def Id(self): ...

    @Id.setter
    def Id(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def NotSupportedByFramework(self, *args, **kwargs) -> Any: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def Register(self, _: AutomationType, __: int, ___: str) -> EventId: ...
    def RegisterEvent(self, _: AutomationType, __: int, ___: str) -> EventId: ...

    def RegisterPattern(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ____: PropertyId,
            ) -> PatternId: ...

    def RegisterProperty(self, _: AutomationType, __: int, ___: str) -> PropertyId: ...

    def RegisterTextAttribute(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ) -> TextAttributeId: ...

    def ToString(self) -> str: ...
    def get_Id(self) -> int: ...
    def get_Name(self) -> str: ...


class IdentifierBase:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object) -> bool: ...
    def Finalize(self) -> None: ...
    def FindEvent(self, _: AutomationType, __: int) -> EventId: ...
    def FindPattern(self, _: AutomationType, __: int) -> PatternId: ...
    def FindProperty(self, _: AutomationType, __: int) -> PropertyId: ...
    def FindTextAttribute(self, _: AutomationType, __: int) -> TextAttributeId: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def Id(self): ...

    @Id.setter
    def Id(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def RegisterEvent(self, _: AutomationType, __: int, ___: str) -> EventId: ...

    def RegisterPattern(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ____: PropertyId,
            ) -> PatternId: ...

    def RegisterProperty(self, _: AutomationType, __: int, ___: str) -> PropertyId: ...

    def RegisterTextAttribute(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ) -> TextAttributeId: ...

    def ToString(self) -> str: ...
    def get_Id(self) -> int: ...
    def get_Name(self) -> str: ...


class PatternId:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def AvailabilityProperty(self): ...

    @AvailabilityProperty.setter
    def AvailabilityProperty(self, value): ...

    def Equals(self, _: object) -> bool: ...
    def Finalize(self) -> None: ...
    def Find(self, _: AutomationType, __: int) -> PatternId: ...
    def FindEvent(self, _: AutomationType, __: int) -> EventId: ...
    def FindPattern(self, _: AutomationType, __: int) -> PatternId: ...
    def FindProperty(self, _: AutomationType, __: int) -> PropertyId: ...
    def FindTextAttribute(self, _: AutomationType, __: int) -> TextAttributeId: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def Id(self): ...

    @Id.setter
    def Id(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def NotSupportedByFramework(self, *args, **kwargs) -> Any: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    def Register(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ____: PropertyId,
            ) -> PatternId: ...

    def RegisterEvent(self, _: AutomationType, __: int, ___: str) -> EventId: ...

    def RegisterPattern(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ____: PropertyId,
            ) -> PatternId: ...

    def RegisterProperty(self, _: AutomationType, __: int, ___: str) -> PropertyId: ...

    def RegisterTextAttribute(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ) -> TextAttributeId: ...

    def ToString(self) -> str: ...
    def get_AvailabilityProperty(self) -> PropertyId: ...
    def get_Id(self) -> int: ...
    def get_Name(self) -> str: ...


class PropertyId:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Convert(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object) -> bool: ...
    def Finalize(self) -> None: ...
    def Find(self, _: AutomationType, __: int) -> PropertyId: ...
    def FindEvent(self, _: AutomationType, __: int) -> EventId: ...
    def FindPattern(self, _: AutomationType, __: int) -> PatternId: ...
    def FindProperty(self, _: AutomationType, __: int) -> PropertyId: ...
    def FindTextAttribute(self, _: AutomationType, __: int) -> TextAttributeId: ...
    def GetCondition(self, _: object) -> PropertyCondition: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def Id(self): ...

    @Id.setter
    def Id(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def NotSupportedByFramework(self, *args, **kwargs) -> Any: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def Register(self, _: AutomationType, __: int, ___: str) -> PropertyId: ...
    def RegisterEvent(self, _: AutomationType, __: int, ___: str) -> EventId: ...

    def RegisterPattern(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ____: PropertyId,
            ) -> PatternId: ...

    def RegisterProperty(self, _: AutomationType, __: int, ___: str) -> PropertyId: ...

    def RegisterTextAttribute(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ) -> TextAttributeId: ...

    def SetConverter(
            self,
            _: System.Func[AutomationBase, object, object],
            ) -> PropertyId: ...

    def ToString(self) -> str: ...
    def get_Id(self) -> int: ...
    def get_Name(self) -> str: ...


class TextAttributeId:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Convert(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object) -> bool: ...
    def Finalize(self) -> None: ...
    def Find(self, _: AutomationType, __: int) -> TextAttributeId: ...
    def FindEvent(self, _: AutomationType, __: int) -> EventId: ...
    def FindPattern(self, _: AutomationType, __: int) -> PatternId: ...
    def FindProperty(self, _: AutomationType, __: int) -> PropertyId: ...
    def FindTextAttribute(self, _: AutomationType, __: int) -> TextAttributeId: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def Id(self): ...

    @Id.setter
    def Id(self, value): ...

    def MemberwiseClone(self) -> object: ...

    @property
    def Name(self): ...

    @Name.setter
    def Name(self, value): ...

    def NotSupportedByFramework(self, *args, **kwargs) -> Any: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def Register(self, _: AutomationType, __: int, ___: str) -> TextAttributeId: ...
    def RegisterEvent(self, _: AutomationType, __: int, ___: str) -> EventId: ...

    def RegisterPattern(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ____: PropertyId,
            ) -> PatternId: ...

    def RegisterProperty(self, _: AutomationType, __: int, ___: str) -> PropertyId: ...

    def RegisterTextAttribute(
            self,
            _: AutomationType,
            __: int,
            ___: str,
            ) -> TextAttributeId: ...

    def SetConverter(
            self,
            _: System.Func[AutomationBase, object, object],
            ) -> TextAttributeId: ...

    def ToString(self) -> str: ...
    def get_Id(self) -> int: ...
    def get_Name(self) -> str: ...
