from __future__ import annotations

from typing import Any
from typing import List
from typing import Type

import System
import System.Collections
import System.ComponentModel
import System.Configuration
import System.Configuration.Assemblies
import System.Data
import System.Globalization
import System.IO
import System.Reflection
import System.Runtime
import System.Runtime.CompilerServices
import System.Runtime.InteropServices
import System.Runtime.Remoting
import System.Runtime.Serialization
import System.Security
import System.Security.AccessControl
import System.Security.Cryptography
import System.Security.Cryptography.X509Certificates
import System.Security.Policy
import System.Security.Principal
import System.Threading
import System.Threading.Tasks
import System.Xml
import System.Xml.Schema
import System.Xml.Serialization
from System.ComponentModel import MarshalByValueComponent


class AndCondition:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...

    @property
    def ChildCount(self): ...

    @ChildCount.setter
    def ChildCount(self, value): ...

    @property
    def Conditions(self): ...

    @Conditions.setter
    def Conditions(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def JunctionOperator(self): ...

    @JunctionOperator.setter
    def JunctionOperator(self, value): ...

    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def get_ChildCount(self) -> int: ...
    def get_Conditions(self) -> List[ConditionBase]: ...
    def get_JunctionOperator(self) -> str: ...


class BoolCondition:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...

    @property
    def BooleanValue(self): ...

    @BooleanValue.setter
    def BooleanValue(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def get_BooleanValue(self) -> bool: ...


class TrueCondition:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...

    @property
    def BooleanValue(self): ...

    @BooleanValue.setter
    def BooleanValue(self, value): ...

    def Default(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def get_BooleanValue(self) -> bool: ...
    def get_Default(self) -> TrueCondition: ...


class FalseCondition:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...

    @property
    def BooleanValue(self): ...

    @BooleanValue.setter
    def BooleanValue(self, value): ...

    def Default(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def get_BooleanValue(self) -> bool: ...
    def get_Default(self) -> FalseCondition: ...


class ConditionBase:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...


class ConditionFactory:

    def __init__(self, *args, **kwargs) -> Any: ...
    def ByAutomationId(self, _: str) -> PropertyCondition: ...
    def ByClassName(self, _: str) -> PropertyCondition: ...
    def ByControlType(self, _: ControlType) -> PropertyCondition: ...
    def ByFrameworkId(self, _: str) -> PropertyCondition: ...
    def ByFrameworkType(self, _: FrameworkType) -> PropertyCondition: ...
    def ByHelpText(self, _: str) -> PropertyCondition: ...
    def ByLocalizedControlType(self, _: str) -> PropertyCondition: ...
    def ByName(self, _: str) -> PropertyCondition: ...
    def ByProcessId(self, _: int) -> PropertyCondition: ...
    def ByText(self, _: str) -> PropertyCondition: ...
    def ByValue(self, _: str) -> PropertyCondition: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Grid(self) -> OrCondition: ...
    def HorizontalScrollBar(self) -> AndCondition: ...
    def MemberwiseClone(self) -> object: ...
    def Menu(self) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def VerticalScrollBar(self) -> AndCondition: ...


class JunctionConditionBase:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...

    @property
    def ChildCount(self): ...

    @ChildCount.setter
    def ChildCount(self, value): ...

    @property
    def Conditions(self): ...

    @Conditions.setter
    def Conditions(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def JunctionOperator(self): ...

    @JunctionOperator.setter
    def JunctionOperator(self, value): ...

    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def get_ChildCount(self) -> int: ...
    def get_Conditions(self) -> List[ConditionBase]: ...
    def get_JunctionOperator(self) -> str: ...


class NotCondition:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...

    @property
    def Condition(self): ...

    @Condition.setter
    def Condition(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def get_Condition(self) -> ConditionBase: ...


class OrCondition:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...

    @property
    def ChildCount(self): ...

    @ChildCount.setter
    def ChildCount(self, value): ...

    @property
    def Conditions(self): ...

    @Conditions.setter
    def Conditions(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def JunctionOperator(self): ...

    @JunctionOperator.setter
    def JunctionOperator(self, value): ...

    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def get_ChildCount(self) -> int: ...
    def get_Conditions(self) -> List[ConditionBase]: ...
    def get_JunctionOperator(self) -> str: ...


class PropertyCondition:

    def __init__(self, *args, **kwargs) -> Any: ...
    def And(self, _: ConditionBase) -> AndCondition: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Not(self) -> NotCondition: ...
    def Or(self, _: ConditionBase) -> OrCondition: ...
    def Overloads(self, *args, **kwargs) -> Any: ...

    @property
    def Property(self): ...

    @Property.setter
    def Property(self, value): ...

    @property
    def PropertyConditionFlags(self): ...

    @PropertyConditionFlags.setter
    def PropertyConditionFlags(self, value): ...

    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...

    @property
    def Value(self): ...

    @Value.setter
    def Value(self, value): ...

    def get_Property(self) -> PropertyId: ...
    def get_PropertyConditionFlags(self) -> PropertyConditionFlags: ...
    def get_Value(self) -> object: ...
