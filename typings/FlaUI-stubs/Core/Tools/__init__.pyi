from __future__ import annotations

from enum import Enum
from typing import Any
from typing import Dict
from typing import List
from typing import Type

import System
import System.Collections
import System.ComponentModel
import System.Configuration
import System.Configuration.Assemblies
import System.Data
import System.Globalization
import System.IO
import System.Reflection
import System.Runtime
import System.Runtime.CompilerServices
import System.Runtime.InteropServices
import System.Runtime.Remoting
import System.Runtime.Serialization
import System.Security
import System.Security.AccessControl
import System.Security.Cryptography
import System.Security.Cryptography.X509Certificates
import System.Security.Policy
import System.Security.Principal
import System.Threading
import System.Threading.Tasks
import System.Xml
import System.Xml.Schema
import System.Xml.Serialization
from System.ComponentModel import MarshalByValueComponent


class RetryResult`1:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def Duration(self): ...

    @Duration.setter
    def Duration(self, value): ...

    @property
    def EndTime(self): ...

    @EndTime.setter
    def EndTime(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def HadException(self): ...

    @HadException.setter
    def HadException(self, value): ...

    @property
    def Iterations(self): ...

    @Iterations.setter
    def Iterations(self, value): ...

    @property
    def LastException(self): ...

    @LastException.setter
    def LastException(self, value): ...

    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    @property
    def Result(self): ...

    @Result.setter
    def Result(self, value): ...

    @property
    def StartTime(self): ...

    @StartTime.setter
    def StartTime(self, value): ...

    @property
    def Success(self): ...

    @Success.setter
    def Success(self, value): ...

    @property
    def TimedOut(self): ...

    @TimedOut.setter
    def TimedOut(self, value): ...

    def ToString(self) -> str: ...
    def get_Duration(self) -> System.TimeSpan: ...
    def get_EndTime(self) -> System.DateTime: ...
    def get_HadException(self) -> bool: ...
    def get_Iterations(self) -> int: ...
    def get_LastException(self) -> Exception: ...
    def get_Result(self) -> Any: ...
    def get_StartTime(self) -> System.DateTime: ...
    def get_Success(self) -> bool: ...
    def get_TimedOut(self) -> bool: ...


class RetryResult:

    def __init__(self, *args, **kwargs) -> Any: ...

    @property
    def Duration(self): ...

    @Duration.setter
    def Duration(self, value): ...

    @property
    def EndTime(self): ...

    @EndTime.setter
    def EndTime(self, value): ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...

    @property
    def HadException(self): ...

    @HadException.setter
    def HadException(self, value): ...

    @property
    def Iterations(self): ...

    @Iterations.setter
    def Iterations(self, value): ...

    @property
    def LastException(self): ...

    @LastException.setter
    def LastException(self, value): ...

    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...

    @property
    def Result(self): ...

    @Result.setter
    def Result(self, value): ...

    @property
    def StartTime(self): ...

    @StartTime.setter
    def StartTime(self, value): ...

    @property
    def Success(self): ...

    @Success.setter
    def Success(self, value): ...

    @property
    def TimedOut(self): ...

    @TimedOut.setter
    def TimedOut(self, value): ...

    def ToString(self) -> str: ...
    def get_Duration(self) -> System.TimeSpan: ...
    def get_EndTime(self) -> System.DateTime: ...
    def get_HadException(self) -> bool: ...
    def get_Iterations(self) -> int: ...
    def get_LastException(self) -> Exception: ...
    def get_Result(self) -> Any: ...
    def get_StartTime(self) -> System.DateTime: ...
    def get_Success(self) -> bool: ...
    def get_TimedOut(self) -> bool: ...


class AccessibilityTextResolver:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetRoleText(self, _: AccessibilityRole) -> str: ...
    def GetStateBitText(self, _: AccessibilityState) -> str: ...
    def GetStateText(self, _: AccessibilityState) -> str: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...


class Com:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Call(self, _: System.Action) -> None: ...
    def CallWithHResult(self, _: System.Func`1[System.Int32]) -> None: ...

    def ConvertException(
            self,
            _: System.Runtime.InteropServices.COMException,
            __: Exception,
            ) -> bool: ...

    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def UIA_E_ELEMENTNOTAVAILABLE(self, *args, **kwargs) -> Any: ...
    def UIA_E_ELEMENTNOTENABLED(self, *args, **kwargs) -> Any: ...
    def UIA_E_INVALIDOPERATION(self, *args, **kwargs) -> Any: ...
    def UIA_E_NOCLICKABLEPOINT(self, *args, **kwargs) -> Any: ...
    def UIA_E_NOTSUPPORTED(self, *args, **kwargs) -> Any: ...
    def UIA_E_PROXYASSEMBLYNOTLOADED(self, *args, **kwargs) -> Any: ...
    def UIA_E_TIMEOUT(self, *args, **kwargs) -> Any: ...


class ExtensionMethods:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Center(self, _: System.Drawing.Rectangle) -> System.Drawing.Point: ...
    def Clamp(self, *args, **kwargs) -> Any: ...
    def Distance(self, _: System.Drawing.Point, __: float, ___: float) -> float: ...
    def East(self, _: System.Drawing.Rectangle, __: int) -> System.Drawing.Point: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Even(self, _: int) -> int: ...
    def Finalize(self) -> None: ...
    def GetFlags(self, _: Enum) -> List[Enum]: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def HasValue(self, _: float) -> bool: ...

    def ImmediateExteriorEast(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def ImmediateExteriorNorth(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def ImmediateExteriorSouth(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def ImmediateExteriorWest(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def ImmediateInteriorEast(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def ImmediateInteriorNorth(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def ImmediateInteriorSouth(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def ImmediateInteriorWest(
            self,
            _: System.Drawing.Rectangle,
            ) -> System.Drawing.Point: ...

    def MemberwiseClone(self) -> object: ...
    def North(self, _: System.Drawing.Rectangle, __: int) -> System.Drawing.Point: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def South(self, _: System.Drawing.Rectangle, __: int) -> System.Drawing.Point: ...
    def ToBool(self, _: int) -> bool: ...
    def ToInt(self, _: bool) -> int: ...
    def ToPOINT(self, _: System.Drawing.Point) -> POINT: ...
    def ToString(self) -> str: ...
    def ToUInt(self, _: Enum) -> int: ...
    def West(self, _: System.Drawing.Rectangle, __: int) -> System.Drawing.Point: ...


class ItemRealizer:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def RealizeItems(self, _: AutomationElement) -> None: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...


class LocalizedStrings:

    def __init__(self, *args, **kwargs) -> Any: ...
    def DataGridViewHeader(self, *args, **kwargs) -> Any: ...
    def DataGridViewHeaderItemTopLeft(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def HorizontalScrollBar(self, *args, **kwargs) -> Any: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def TableHorizontalScrollBar(self, *args, **kwargs) -> Any: ...
    def TableVerticalScrollBar(self, *args, **kwargs) -> Any: ...
    def ToString(self) -> str: ...
    def VerticalScrollBar(self, *args, **kwargs) -> Any: ...
    def WinFormsUIA2HorizontalScrollBarName(self, *args, **kwargs) -> Any: ...
    def WinFormsUIA2VerticalScrollBarName(self, *args, **kwargs) -> Any: ...
    def WinFormsUIA3HorizontalScrollBarName(self, *args, **kwargs) -> Any: ...
    def WinFormsUIA3VerticalScrollBarName(self, *args, **kwargs) -> Any: ...
    def get_DataGridViewHeader(self) -> str: ...
    def get_DataGridViewHeaderItemTopLeft(self) -> str: ...
    def get_HorizontalScrollBar(self) -> str: ...
    def get_TableHorizontalScrollBar(self) -> str: ...
    def get_TableVerticalScrollBar(self) -> str: ...
    def get_VerticalScrollBar(self) -> str: ...
    def get_WinFormsUIA2HorizontalScrollBarName(self) -> str: ...
    def get_WinFormsUIA2VerticalScrollBarName(self) -> str: ...
    def get_WinFormsUIA3HorizontalScrollBarName(self) -> str: ...
    def get_WinFormsUIA3VerticalScrollBarName(self) -> str: ...
    def set_DataGridViewHeader(self, _: str) -> None: ...
    def set_DataGridViewHeaderItemTopLeft(self, _: str) -> None: ...


class OperatingSystem:

    def __init__(self, *args, **kwargs) -> Any: ...
    def CurrentCulture(self, *args, **kwargs) -> Any: ...
    def CurrentProductContains(self, _: str) -> bool: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def IsWindowsServer2016(self) -> bool: ...
    def IsWindowsServer2019(self) -> bool: ...
    def IsWindows10(self) -> bool: ...
    def IsWindows8_1(self) -> bool: ...
    def Is64Bit(self, *args, **kwargs) -> Any: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def Version(self, *args, **kwargs) -> Any: ...
    def WindowsServer2003(self, *args, **kwargs) -> Any: ...
    def WindowsServer2008(self, *args, **kwargs) -> Any: ...
    def WindowsServer2008R2(self, *args, **kwargs) -> Any: ...
    def WindowsServer2008R2SP1(self, *args, **kwargs) -> Any: ...
    def WindowsServer2012(self, *args, **kwargs) -> Any: ...
    def WindowsServer2012R2(self, *args, **kwargs) -> Any: ...
    def WindowsServer2016_1607(self, *args, **kwargs) -> Any: ...
    def WindowsServer2016_1709(self, *args, **kwargs) -> Any: ...
    def WindowsServer2019_1809(self, *args, **kwargs) -> Any: ...
    def WindowsVista(self, *args, **kwargs) -> Any: ...
    def WindowsVistaSP1(self, *args, **kwargs) -> Any: ...
    def WindowsVistaSP2(self, *args, **kwargs) -> Any: ...
    def WindowsXP(self, *args, **kwargs) -> Any: ...
    def Windows10_1507(self, *args, **kwargs) -> Any: ...
    def Windows10_1511(self, *args, **kwargs) -> Any: ...
    def Windows10_1607(self, *args, **kwargs) -> Any: ...
    def Windows10_1703(self, *args, **kwargs) -> Any: ...
    def Windows10_1709(self, *args, **kwargs) -> Any: ...
    def Windows10_1803(self, *args, **kwargs) -> Any: ...
    def Windows10_1809(self, *args, **kwargs) -> Any: ...
    def Windows10_1903(self, *args, **kwargs) -> Any: ...
    def Windows2000(self, *args, **kwargs) -> Any: ...
    def Windows7(self, *args, **kwargs) -> Any: ...
    def Windows7SP1(self, *args, **kwargs) -> Any: ...
    def Windows8(self, *args, **kwargs) -> Any: ...
    def Windows81(self, *args, **kwargs) -> Any: ...
    def Windows81U1(self, *args, **kwargs) -> Any: ...
    def get_CurrentCulture(self) -> System.Globalization.CultureInfo: ...
    def get_Is64Bit(self) -> bool: ...
    def get_Version(self) -> System.Version: ...


class Retry:

    def __init__(self, *args, **kwargs) -> Any: ...
    def DefaultInterval(self, *args, **kwargs) -> Any: ...
    def DefaultTimeout(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...

    def Find(
            self,
            _: System.Func`1[FlaUI.Core.AutomationElements.AutomationElement[]],
            __: Any,
            ) -> List[FlaUI.Core.AutomationElements.AutomationElement]: ...

    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
    def While(self, *args, **kwargs) -> Any: ...

    def WhileEmpty(
            self,
            _: System.Func[str],
            __: System.Nullable[System.TimeSpan],
            ___: System.Nullable[System.TimeSpan],
            ____: bool,
            _____: bool,
            ______: str,
            ) -> RetryResult[str]: ...

    def WhileException(
            self,
            _: System.Action,
            __: System.Nullable[System.TimeSpan],
            ___: System.Nullable[System.TimeSpan],
            ____: bool,
            _____: str,
            ) -> RetryResult[bool]: ...

    def WhileFalse(
            self,
            _: System.Func[bool],
            __: System.Nullable[System.TimeSpan],
            ___: System.Nullable[System.TimeSpan],
            ____: bool,
            _____: bool,
            ______: str,
            ) -> RetryResult[bool]: ...

    def WhileNot(self, *args, **kwargs) -> Any: ...
    def WhileNotNull(self, *args, **kwargs) -> Any: ...
    def WhileNull(self, *args, **kwargs) -> Any: ...

    def WhileTrue(
            self,
            _: System.Func[bool],
            __: System.Nullable[System.TimeSpan],
            ___: System.Nullable[System.TimeSpan],
            ____: bool,
            _____: bool,
            ______: str,
            ) -> RetryResult[bool]: ...

    def get_DefaultInterval(self) -> System.TimeSpan: ...
    def get_DefaultTimeout(self) -> System.TimeSpan: ...
    def set_DefaultInterval(self, _: System.TimeSpan) -> None: ...
    def set_DefaultTimeout(self, _: System.TimeSpan) -> None: ...


class StringFormatter:

    def __init__(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def SizeSuffix(self, _: int, __: int) -> str: ...
    def ToString(self) -> str: ...


class SystemInfo:

    def __init__(self, *args, **kwargs) -> Any: ...
    def CpuUsage(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MemberwiseClone(self) -> object: ...
    def MinimumRefreshInterval(self, *args, **kwargs) -> Any: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def PhysicalMemoryFree(self, *args, **kwargs) -> Any: ...
    def PhysicalMemoryFreePercent(self, *args, **kwargs) -> Any: ...
    def PhysicalMemoryTotal(self, *args, **kwargs) -> Any: ...
    def PhysicalMemoryUsed(self, *args, **kwargs) -> Any: ...
    def PhysicalMemoryUsedPercent(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def RefreshAll(self) -> None: ...
    def RefreshCpu(self) -> None: ...
    def RefreshMemory(self) -> None: ...
    def ToString(self) -> str: ...
    def VirtualMemoryFree(self, *args, **kwargs) -> Any: ...
    def VirtualMemoryFreePercent(self, *args, **kwargs) -> Any: ...
    def VirtualMemoryTotal(self, *args, **kwargs) -> Any: ...
    def VirtualMemoryUsed(self, *args, **kwargs) -> Any: ...
    def VirtualMemoryUsedPercent(self, *args, **kwargs) -> Any: ...
    def get_CpuUsage(self) -> float: ...
    def get_MinimumRefreshInterval(self) -> System.TimeSpan: ...
    def get_PhysicalMemoryFree(self) -> int: ...
    def get_PhysicalMemoryFreePercent(self) -> float: ...
    def get_PhysicalMemoryTotal(self) -> int: ...
    def get_PhysicalMemoryUsed(self) -> int: ...
    def get_PhysicalMemoryUsedPercent(self) -> float: ...
    def get_VirtualMemoryFree(self) -> int: ...
    def get_VirtualMemoryFreePercent(self) -> float: ...
    def get_VirtualMemoryTotal(self) -> int: ...
    def get_VirtualMemoryUsed(self) -> int: ...
    def get_VirtualMemoryUsedPercent(self) -> float: ...
    def set_MinimumRefreshInterval(self, _: System.TimeSpan) -> None: ...


class WindowsStoreAppLauncher:

    def __init__(self, *args, **kwargs) -> Any: ...
    def ActivateOptions(self, *args, **kwargs) -> Any: ...
    def Equals(self, _: object, __: object) -> bool: ...
    def Finalize(self) -> None: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def IApplicationActivationManager(self, *args, **kwargs) -> Any: ...
    def Launch(self, _: str, __: str) -> System.Diagnostics.Process: ...
    def MemberwiseClone(self) -> object: ...
    def Overloads(self, *args, **kwargs) -> Any: ...
    def ReferenceEquals(self, _: object, __: object) -> bool: ...
    def ToString(self) -> str: ...
